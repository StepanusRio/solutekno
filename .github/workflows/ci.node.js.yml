name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run build --if-present

      - name: Install cloudflared
        run: |
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared

      - name: Set up SSH config for Cloudflare Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          echo "Host cf-server
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USERNAME }}
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
            ProxyCommand cloudflared access ssh --hostname %h" >> ~/.ssh/config

      - name: Authenticate with Cloudflare Access
        run: |
          mkdir -p ~/.cloudflared
          cat <<EOF > ~/.cloudflared/credentials.json
          {
            "client_id": "${{ secrets.CF_ACCESS_CLIENT_ID }}",
            "client_secret": "${{ secrets.CF_ACCESS_CLIENT_SECRET }}"
          }
          EOF

      - name: Deploy via SSH through Cloudflare Tunnel
        run: |
          ssh cf-server << 'EOF'
            cd /home/libxyz/Documents/My-Personal-Project/solutekno/solutekno
            git pull origin main
            npm install --production
            npm run build
            pm2 restart solutekno-cp
            exit 0
          EOF
